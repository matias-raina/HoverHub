---
title: HoverHub - Class Diagram (Based on Database Schema)
config:
  layout: elk
---
classDiagram
direction TB

%% ===== CORE USER AND ACCOUNT CLASSES =====
class User {
  + id: int
  + firstname: string
  + lastname: string
  + username: string
  + email: string
  - password: string
  + getFullName() string
  + authenticate(password: string) bool
}

class AccountType {
  + id: int
  + name: string
  + getDescription() string
}

class AccountStatusType {
  + id: int
  + name: string
  + isActive() bool
}

class Account {
  + id: int
  + user_id: int
  + account_type_id: int
  + account_status_type_id: int
  + created_at: datetime
  + getUser() User
  + getAccountType() AccountType
  + getStatus() AccountStatusType
  + isActive() bool
}

%% ===== DRONER PROFILE CLASSES =====
class DronerProfile {
  + id: int
  + account_id: int
  + display_name: string
  + bio: string
  + experience_years: int
  + getAccount() Account
  + getLicenses() List~License~
  + getPortfolio() List~PortfolioItem~
  + addPortfolioItem(item: PortfolioItem) void
}

class License {
  + id: int
  + droner_profile_id: int
  + license_type_id: int
  + expiration_date: date
  + getDronerProfile() DronerProfile
  + getLicenseType() LicenseType
  + isExpired() bool
  + isValid() bool
}

class LicenseType {
  + id: int
  + name: string
  + description: string
  + getRequirements() string
}

class PortfolioItem {
  + id: int
  + droner_profile_id: int
  + title: string
  + media_url: string
  + description: string
  + getDronerProfile() DronerProfile
  + getMediaUrl() string
}

%% ===== JOB POSTER PROFILE CLASS =====
class JobPosterProfile {
  + id: int
  + account_id: int
  + company: string
  + contact_name: string
  + contact_email: string
  + getAccount() Account
  + getPostedJobs() List~Job~
}

%% ===== JOB CLASSES =====
class Job {
  + id: int
  + account_id: int
  + title: string
  + description: string
  + budget: decimal
  + location: string
  + start_date: date
  + end_date: date
  + getAccount() Account
  + getRequirements() List~JobRequirement~
  + getCategories() List~JobCategory~
  + getApplications() List~Application~
  + isActive() bool
  + getDuration() int
}

class JobRequirement {
  + id: int
  + job_id: int
  + job_requirement_type_id: int
  + value: string
  + getJob() Job
  + getRequirementType() JobRequirementType
}

class JobRequirementType {
  + id: int
  + name: string
  + description: string
  + validate(value: string) bool
}

class JobCategory {
  + id: int
  + name: string
  + getJobs() List~Job~
  + getSubscribers() List~JobAlertSubscription~
}

class JobCategoryAssignment {
  + job_id: int
  + job_category_id: int
  + getJob() Job
  + getCategory() JobCategory
}

%% ===== APPLICATION CLASS =====
class Application {
  + id: int
  + job_id: int
  + account_id: int
  + status: string
  + message: string
  + submitted_at: datetime
  + getJob() Job
  + getAccount() Account
  + updateStatus(newStatus: string) void
  + withdraw() void
  + accept() void
  + reject() void
}

%% ===== FAVORITE CLASS =====
class Favorite {
  + id: int
  + job_id: int
  + account_id: int
  + created_at: datetime
  + getJob() Job
  + getAccount() Account
  + remove() void
}

%% ===== NOTIFICATION CLASSES =====
class Notification {
  + id: int
  + recipient_user_id: int
  + actor_account_id: int
  + notification_type_id: int
  + job_id: int
  + application_id: int
  + message: string
  + created_at: datetime
  + read_at: datetime
  + getRecipient() User
  + getActor() Account
  + getType() NotificationType
  + markAsRead() void
  + isRead() bool
}

class NotificationType {
  + id: int
  + name: string
  + channel: string
  + getNotifications() List~Notification~
}

%% ===== JOB ALERT SUBSCRIPTION CLASS =====
class JobAlertSubscription {
  + id: int
  + droner_account_id: int
  + job_category_id: int
  + job_poster_account_id: int
  + is_active: bool
  + created_at: datetime
  + getDronerAccount() Account
  + getJobCategory() JobCategory
  + getJobPosterAccount() Account
  + activate() void
  + deactivate() void
  + matchesJob(job: Job) bool
}

%% ===== RELATIONSHIPS =====
User "1" --> "0..*" Account : owns
AccountType "1" --> "0..*" Account : categorizes
AccountStatusType "1" --> "0..*" Account : defines status

Account "1" --> "0..1" DronerProfile : has droner profile
Account "1" --> "0..1" JobPosterProfile : has poster profile

DronerProfile "1" --> "0..*" License : holds
LicenseType "1" --> "0..*" License : classifies
DronerProfile "1" --> "0..*" PortfolioItem : showcases

Account "1" --> "0..*" Job : posts
Job "1" --> "0..*" JobRequirement : specifies
JobRequirementType "1" --> "0..*" JobRequirement : categorizes

Job "1" --> "0..*" Application : receives
Account "1" --> "0..*" Application : submits

Account "1" --> "0..*" Favorite : bookmarks
Job "1" --> "0..*" Favorite : appears in

Job "1" --> "0..*" JobCategoryAssignment : tagged
JobCategory "1" --> "0..*" JobCategoryAssignment : groups

User "1" --> "0..*" Notification : receives
Account "0..*" --> "0..*" Notification : triggers
NotificationType "1" --> "0..*" Notification : categorizes
Notification "0..*" --> "0..1" Application : references application
Notification "0..*" --> "0..1" Job : references job

Account "1" --> "0..*" JobAlertSubscription : configures
JobCategory "0..*" --> "0..*" JobAlertSubscription : filters
JobAlertSubscription "0..*" --> "0..1" Account : targets poster account
